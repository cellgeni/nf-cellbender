FROM nvidia/cuda:12.1.1-cudnn8-runtime-ubuntu22.04

ENV DEBIAN_FRONTEND=noninteractive 

SHELL ["/bin/bash", "-c"]

# Install OS packages for cellbender
RUN apt update && \
    apt install --no-install-recommends --yes curl ca-certificates git bzip2 procps unzip python3 python3-venv python3-dev python3-pip python-is-python3 gawk

# Create a virtual environment
ENV VENV_PATH="/env"
ENV PATH="${VENV_PATH}/bin:${PATH}"
RUN python -m venv $VENV_PATH && \
    . ${VENV_PATH}/bin/activate && \
    pip install -U pip wheel setuptools --no-cache-dir


# Install PyTorch
RUN pip install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu121

# Install Cellbender from source
# Patch required to support torch>2.0.0, otherwise checkpoint.py will break
# see https://github.com/broadinstitute/CellBender/issues/296
RUN git clone --depth 1 --branch v0.3.2 https://github.com/broadinstitute/CellBender.git /opt/cellbender && \
    . "${VENV_PATH}/bin/activate" && \
    sed "s/torch.save(model_obj, filebase + '_model.torch')/torch.save(model_obj.state_dict(), filebase + '_model.torch')/g" -i /opt/cellbender/cellbender/remove_background/checkpoint.py && \
    sed "s/torch.save(scheduler, filebase + '_optim.torch')/scheduler.save(filebase + '_optim.torch')/g" -i /opt/cellbender/cellbender/remove_background/checkpoint.py && \
    pip install -r /opt/cellbender/requirements.txt --no-cache-dir && \
    pip install /opt/cellbender && \
    rm -rf /tmp/*


# Install OS packages for QC script
RUN apt-get update && apt-get install -y liblzma-dev libbz2-dev zlib1g libpng-dev libxml2-dev \
    gfortran libglpk-dev libhdf5-dev libcurl4-openssl-dev img2pdf wget libreadline8 patch

# Install R for QC script
ARG R_VERSION=4.4.2

RUN wget https://cdn.rstudio.com/r/ubuntu-2204/pkgs/r-${R_VERSION}_1_amd64.deb && \
    apt-get update -qq && \
    apt-get install -f -y ./r-${R_VERSION}_1_amd64.deb && \
    ln -s /opt/R/${R_VERSION}/bin/R /usr/bin/R && \
    ln -s /opt/R/${R_VERSION}/bin/Rscript /usr/bin/Rscript && \
    ln -s /opt/R/${R_VERSION}/lib/R /usr/lib/R && \
    rm r-${R_VERSION}_1_amd64.deb && \
    rm -rf /var/lib/apt/lists/*


# Install R packages for QC script
RUN Rscript -e "install.packages('remotes', repos='https://cloud.r-project.org/')"
RUN Rscript -e "remotes::install_version('argparse', version = '2.2.5', repos = 'https://cloud.r-project.org/')"
RUN Rscript -e "remotes::install_version('stringr', version = '1.5.1', repos = 'https://cloud.r-project.org/')"
RUN Rscript -e "remotes::install_version('Matrix', version = '1.7.2', repos = 'https://cloud.r-project.org/')"
RUN Rscript -e "remotes::install_version('hdf5r', version = '1.3.12', repos = 'https://cloud.r-project.org/')"

# Copy Dockerfile to the container
COPY Dockerfile /docker/
RUN chmod -R 755 /docker